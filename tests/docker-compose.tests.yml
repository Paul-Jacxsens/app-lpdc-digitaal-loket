version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:

  mocklogin:
    image: lblod/mock-login-service:0.4.0
    ports:
      - "11996:80"

  identifier:
    image: semtech/mu-identifier:1.10.0
    ports:
      - "96:80"
    restart: always
    logging: *default-logging

  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ../config/dispatcher:/config
    restart: always
    logging: *default-logging

  database:
    image: semtech/mu-authorization:feature-service-roam-r1.1
    environment:
      MU_SPARQL_ENDPOINT: "http://virtuoso:8890/sparql"
      DATABASE_OVERLOAD_RECOVERY: "true"
      QUERY_MAX_PROCESSING_TIME: 605000
      QUERY_MAX_EXECUTION_TIME: 605000
    volumes:
      - ../config/authorization:/config
    restart: always
    logging: *default-logging

  virtuoso:
    image: redpencil/virtuoso:1.2.0-rc.1
    ports:
      - "8896:8890"
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data-tests/db:/data
      - ../config/virtuoso/virtuoso.ini:/data/virtuoso.ini # Note: Override this setting on production
      - ../config/virtuoso/:/opt/virtuoso-scripts
    restart: always
    logging: *default-logging

  deltanotifier:
    image: cecemel/delta-notifier:0.2.0-beta.3
    volumes:
      - ../config/delta:/config
    labels:
      - "logging=true"
    restart: always
    logging: *default-logging

  migrations:
    image: semtech/mu-migrations-service:0.8.0
    ports:
      - "9996:80"
    links:
      - virtuoso:database
    environment:
      MU_SPARQL_TIMEOUT: "300"
      BATCH_SIZE: "1000"
    volumes:
      - ../config/migrations:/data/migrations
    restart: always
    logging: *default-logging

  cache:
    image: semtech/mu-cache:2.0.2
    links:
      - resource:backend
    restart: always
    logging: *default-logging

  resource:
    image: semtech/mu-cl-resources:feature-optionally-accept-strange-resource-types
    environment:
      CACHE_CLEAR_PATH: "http://cache/.mu/clear-keys"
    volumes:
      - ../config/resources:/config
    restart: always
    logging: *default-logging

  lpdc-ldes-consumer:
    image: redpencil/ldes-consumer:0.7.1
    depends_on:
      lpdc-management:
        condition: service_healthy
    environment:
      LDES_STREAM: "http://ipdc-stub/doc/conceptsnapshot"
      LDES_ENDPOINT_VIEW: "http://ipdc-stub/doc/conceptsnapshot?pageNumber=0" # first page of the stream
      LDES_RELATION_PATH: "http://www.w3.org/ns/prov#generatedAtTime"
      CRON_PATTERN: "*/1 * * * *" # run the job every minute
      LDES_POLLING_INTERVAL: 3600000 # since ipdcs caching headers indicate no caching, this means the polling interval to initiate the request again (3 600 000 millis = 1 hour)
      REPLACE_VERSIONS: "false" # we query snapshots. snapshots don't change ...
      MU_APPLICATION_GRAPH: "http://mu.semte.ch/graphs/lpdc/ldes-data"
      LDES_ENDPOINT_HEADER_X-API-KEY: "<your endpoint api key here>"

  ipdc-stub:
    image: ipdc-stub:latest
    ports:
      - "33000:80"
